<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/planet/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/planet/</description>

<item>
	<title>Eclipse Announcements: New Industry 4.0 Open Testbed Addresses Performance Monitoring and Management in Manufacturing</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/sojFX7zfPpY/20171019_industry40_testbed.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/sojFX7zfPpY/20171019_industry40_testbed.php</link>
	<description>Bosch Software Innovations, CONTACT Software, Eurotech, fortiss GmbH, and InfluxData collaborate to demonstrate Product Performance Management.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/sojFX7zfPpY&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 19 Oct 2017 16:00:00 +0000</pubDate>
</item>
<item>
	<title>Ian Skerrett: Industry 4.0 Meets Open Source</title>
	<guid isPermaLink="false">http://ianskerrett.wordpress.com/?p=4400</guid>
	<link>http://feedproxy.google.com/~r/IanSkerrett/~3/wmDReE-hu2I/</link>
	<description>&lt;p&gt;A key industry that is driving the Internet of Things is Manufacturing. Companies are always looking to make their manufacturing process more efficient, flexible and improve quality, while lowering costs. Therefore, modernizing factory floors and integrating factory equipment with the enterprise IT systems is of interest to many manufacturing companies. In Germany, they call this trend Industrie 4.0. They see IoT as being the fourth industrial revolution to fundamentally change the manufacturing industry. For history buffs, the other industrial revolutions are considered to be: mechanization with water and steam, mass production, and robotic automation.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://iot.eclipse.org/&quot;&gt;Eclipse IoT&lt;/a&gt; community has been developing open source technology that can be used to implement Industry 4.0 solutions. A key strength of our community is that we have companies like Bosch, Red Hat, Eurotech, Sierra Wireless, IBM and others,  who are experts in operational technology (OT) and experts in enterprise IT technology (IT). It is really the integration of OT and IT that leads to successful Industry 4.0 deployments.&lt;/p&gt;
&lt;p&gt;To help educate organizations on how open source software can be used to implement Industry 4.0 solutions, the Eclipse IoT Working Group has announced two new initiative:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A new white paper titled ‘&lt;a href=&quot;https://iot.eclipse.org/resources/white-papers/Eclipse%20IoT%20White%20Paper%20-%20Open%20Source%20Software%20for%20Industry%204.0.pdf&quot;&gt;Open Source for Industry 4.0&lt;/a&gt;‘ has been published. This white paper describes the software features required for Industry 4.0 and what open source projects are available.&lt;/li&gt;
&lt;li&gt;A new Eclipse Open IoT Testbed has been launched to showcase how Eclipse IoT technology and commercial solutions can be used to implement Production Performance Management (PPM) for factory floors. The &lt;a href=&quot;https://iot.eclipse.org/testbeds/production-performance-management/&quot;&gt;PPM Testbed&lt;/a&gt; is a collaboration of Bosch SI, Contact Software, InfluxData, Eurotech and fortis GmbH. It is a great example of how open source software can be used to solve important challenges in the manufacturing industry.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Both these initiatives are great examples of collaborations made possible by the Eclipse IoT Working Group. It also shows how open source is really ready to solve Industry 4.0 challenges.&lt;/p&gt;
&lt;p&gt;Next week we will be talking a lot about the PPM testbed, Industry 4.0 and &lt;a href=&quot;https://www.eclipsecon.org/europe2017/iot&quot;&gt;All Things IoT&lt;/a&gt;.  I hope you will join us.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/ianskerrett.wordpress.com/4400/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/ianskerrett.wordpress.com/4400/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=ianskerrett.wordpress.com&amp;amp;blog=405862&amp;amp;post=4400&amp;amp;subd=ianskerrett&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/IanSkerrett/~4/wmDReE-hu2I&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 19 Oct 2017 15:03:48 +0000</pubDate>
</item>
<item>
	<title>typefox.io: Theia Update – Extensions, Git Support &amp; More</title>
	<guid isPermaLink="false">http://typefox.io/?p=14429</guid>
	<link>http://typefox.io/theia-update</link>
	<description>&lt;div class=&quot;fusion-fullwidth fullwidth-box nonhundred-percent-fullwidth&quot; style=&quot;background-color: rgba(255,255,255,0); background-position: center center; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;&quot;&gt;&lt;div class=&quot;fusion-builder-row fusion-row &quot;&gt;&lt;div class=&quot;fusion-layout-column fusion_builder_column fusion_builder_column_1_1  fusion-one-full fusion-column-first fusion-column-last 1_1&quot; style=&quot;margin-top: 0px; margin-bottom: 0px;&quot;&gt;
			&lt;div class=&quot;fusion-column-wrapper&quot;&gt;
				&lt;p class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Back in May, we &lt;a href=&quot;https://typefox.io/theia-one-ide-for-desktop-cloud&quot;&gt;announced&lt;/a&gt; a new open-source IDE framework for build Desktop &amp;amp; Cloud IDEs implemented in TypeScript. Since then, Theia has become more mature and feature rich, approaching its &lt;a href=&quot;https://github.com/theia-ide/theia/milestone/3&quot;&gt;&lt;strong&gt;1.0 BETA version&lt;/strong&gt;&lt;/a&gt; on December 6. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;During the last couple of months, the Theia developers (we count 19 contributors so far with two companies backing up the development) have been busy laying out important groundwork as well as implementing features. In this post, I want to give you an overview of the current state.&lt;/span&gt;&lt;/p&gt;
&lt;h2 class=&quot;p4&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;b&gt;Extension System&lt;/b&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Besides being able to run both a desktop and a cloud IDE, from the same source code, an extendable platform has been one of the primary motivations for Theia. We had mainly two requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Extensions should be first class citizens&lt;br /&gt;
&lt;/strong&gt;An extension should be able to contribute and change any aspect of a Theia-based application. The goal really is to allow developers to compose custom products from extensions. Therefore, in Theia, everything is an extension. So even in the core, we eat our own dog food. This is different to e.g. VS Code which runs extensions in an isolated sandbox with only a limited API exposed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Discover and Install Extensions&lt;br /&gt;
&lt;/strong&gt;&lt;/strong&gt;The other requirement was to allow users to change the set of installed extensions at runtime, by searching a registry/marketplace and installing/updating/removing extensions. This is very common, but e.g. Eclipse Che does not support such a feature yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;The extension system has been one of the most important tasks, as it lays out how future development can scale and an eco-system can grow. Therefore another important goal was to make it as simple as possible and rely on existing knowledge and widely used concepts.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Theia extensions are regular &lt;em&gt;Node.js&lt;/em&gt; packages which you publish to &lt;a href=&quot;http://npmjs.org&quot;&gt;npmjs.or&lt;/a&gt; or another npm registry. To turn your package into a Theia extension, you only need to add minimal information to the &lt;code&gt;package.json&lt;/code&gt;. At the core, we use dependency injection (&lt;a href=&quot;https://github.com/inversify/InversifyJS&quot;&gt;InversifyJS&lt;/a&gt;) to wire the contributions from all extensions together. Theia comes with a CLI tool that makes it easy to create an application from a list of extensions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The dynamic part that allows to install and uninstall extensions at runtime, really just changes the list of extensions and runs the CLI again. When an extension has been successfully installed it informs the user that the application has been updated and restarted. After a quick reload the new extensions is ready to be used.&lt;/p&gt;
&lt;p class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Furthermore, for extension developers we’ve created a small &lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman&lt;/a&gt; generator that gets you started with the initial project setup. You can find more &lt;a href=&quot;https://github.com/theia-ide/theia/blob/master/doc/Authoring_Extensions.md#authoring-theia-extensions&quot;&gt;detailed documentation here&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;fusion-video fusion-youtube&quot;&gt;&lt;div class=&quot;video-shortcode&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2&gt;&lt;/h2&gt;
&lt;h2 class=&quot;p4&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;b&gt;Git Support&lt;/b&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Another new extension is the Git extension, that supports the user to author commits and execute basic git commands. It is very similar to the git support in VS Code, so you can &lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;see the list of local and staged changes, &lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;open diff editors to see more details and &lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;execute standard git operations. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;s1&quot;&gt;Under the hood, the extension uses GitHub’s &lt;a href=&quot;https://github.com/desktop/dugite&quot;&gt;dugite&lt;/a&gt; library, which we &lt;a href=&quot;https://github.com/TypeFox/dugite-extra&quot;&gt;extended&lt;/a&gt; a bit.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Here’s ashort screencast showing it in action:&lt;/p&gt;
&lt;div class=&quot;fusion-video fusion-youtube&quot;&gt;&lt;div class=&quot;video-shortcode&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2&gt;&lt;/h2&gt;
&lt;h2 class=&quot;p4&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;b&gt;Language Tooling&lt;/b&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Intelligent support for languages is one of the main features an IDE absolutely needs to have. With Theia, we decided to primarily support the Language Server Protocol. By integrating the awesome Monaco editor, that also drives VS Code we already have an excellent foundation. Today, &lt;b&gt;Theia has full support for the LSP&lt;/b&gt; and we even have additional extensions for some languages. For instance, in Java one can navigate to files contained in jars.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;All &lt;a href=&quot;https://github.com/Microsoft/language-server-protocol/wiki/Protocol-Implementations&quot;&gt;&lt;strong&gt;46&lt;/strong&gt; available language servers&lt;/a&gt; will work fine in Theia, we just haven’t wrapped all of them in a Theia extension for easy consumption, yet. As of today, the following languages are supported:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li class=&quot;p3&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Java&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;p3&quot;&gt;JavaScript / TypeScript&lt;/li&gt;
&lt;li class=&quot;p3&quot;&gt;Python&lt;/li&gt;
&lt;li class=&quot;p3&quot;&gt;C/C++ (Clangd in development)&lt;/li&gt;
&lt;li class=&quot;p3&quot;&gt;Go&lt;/li&gt;
&lt;li class=&quot;p3&quot;&gt;YANG&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The list of features Theia supports includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;content assist&lt;/li&gt;
&lt;li&gt;find references&lt;/li&gt;
&lt;li&gt;go to definition&lt;/li&gt;
&lt;li&gt;diagnostics (incl. a problems-view listing all of them)&lt;/li&gt;
&lt;li&gt;outline&lt;/li&gt;
&lt;li&gt;quick outline&lt;/li&gt;
&lt;li&gt;hover&lt;/li&gt;
&lt;li&gt;signature help&lt;/li&gt;
&lt;li&gt;formatting&lt;/li&gt;
&lt;li&gt;rename refactoring&lt;/li&gt;
&lt;li&gt;syntax coloring&lt;/li&gt;
&lt;li&gt;folding&lt;/li&gt;
&lt;li&gt;bracket matching&lt;/li&gt;
&lt;li&gt;toggle comment&lt;/li&gt;
&lt;li&gt;code lenses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many more important editing features, provided by Monaco, such as moving lines, multi cursor support and so on. Also, Theia has gained lots of other smaller nice goodies, like the quick command palette, preference support or the open file command.&lt;/p&gt;
&lt;div class=&quot;wp-caption alignnone&quot; id=&quot;attachment_14451&quot; style=&quot;width: 730px;&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;size-full wp-image-14451&quot; height=&quot;390&quot; src=&quot;http://typefox.io/wp-content/uploads/2017/10/quick-open.gif&quot; width=&quot;720&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Quick Open in Theia&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;Furthermore, the colleagues from Ericsson are actively working on managing processes, debugging support and other useful extensions.&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Theia has advanced to a solid foundation for future browser and desktop IDEs. If you were looking for an easy-to-use, open-source framework to build extendable IDEs, you can consider Theia now.&lt;/p&gt;
&lt;p&gt;Have a look at the &lt;a href=&quot;https://github.com/theia-ide/theia/milestone/3&quot;&gt;backlog&lt;/a&gt; to get an idea of what we want to accomplish in the next weeks.&lt;/p&gt;
&lt;p&gt;Besides using Theia for your own projects/products we are welcoming any kind of contribution. If you want to get involved with Theia, please ping us on &lt;a href=&quot;https://github.com/theia-ide/theia&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;https://gitter.im/theia-ide/theia&quot;&gt;Gitter&lt;/a&gt; (or StackOverflow, Twitter, etc.). There are many fun things to work on and some are explicitly &lt;a href=&quot;https://github.com/theia-ide/theia/labels/beginners&quot;&gt;marked for starting contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let us know what you think!&lt;/p&gt;
&lt;div class=&quot;fusion-clearfix&quot;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 19 Oct 2017 11:30:01 +0000</pubDate>
</item>
<item>
	<title>Karsten Thoms: Next stop: EclipseCon Europe 2017</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=819</guid>
	<link>https://kthoms.wordpress.com/2017/10/18/next-stop-eclipsecon-europe-2017/</link>
	<description>&lt;p&gt;As every year &lt;a href=&quot;https://www.eclipsecon.org/europe2017/&quot;&gt;EclipseCon Europe&lt;/a&gt; is fixed in my schedule, and I am excited to go there. It is a melting pot for the Eclipse Community, a big family come together. I am in the last preparations before departure to Ludwigsburg, and can’t wait to finally go there.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;FullSizeRender.jpg&quot; class=&quot;alignnone size-full wp-image-858&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/fullsizerender.jpg?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;itemis is of course sponsoring EclipseCon Europe, and we will have a booth in front of the theater. With &lt;strong&gt;12 talks, 8 speakers and about 20 attendees&lt;/strong&gt; I am expecting that the it(emis)-Crowd is again the biggest party at EclipseCon Europe. The itemis booth will be the place where you will have the highest chance to meet me, but of course there is plenty of time to meet each other.&lt;/p&gt;
&lt;h2&gt;Meeting the Scout and Modeling community&lt;/h2&gt;
&lt;p&gt;As in the past years, I will start my journey already on sunday. I will again join the &lt;a href=&quot;https://www.eclipse.org/scout/&quot;&gt;Eclipse Scout&lt;/a&gt; community’s pre-conference dinner at the Rossknecht. The past years I was joining on monday the Scout User Group meeting, but this year I committed to join the &lt;a href=&quot;https://www.eclipsecon.org/europe2017/schedule_item/guided-tour-eclipse-modeling&quot;&gt;Guided Tour on Eclipse Modeling&lt;/a&gt; at the Unconference. At 14:40 I will give there my first talk, an insight on the &lt;strong&gt;Xtend&lt;/strong&gt; language.&lt;/p&gt;
&lt;h2&gt;Xtext and Platform development&lt;/h2&gt;
&lt;p&gt;This Friday, Oct 20th, &lt;strong&gt;Xtext 2.13 will be released&lt;/strong&gt; finally and I have invested quite some time in the past months to find and resolve bugs. I have worked intensively with the &lt;a href=&quot;https://www.codetrails.com/error-analytics/&quot;&gt;Eclipse EARI&lt;/a&gt; system, and investigated together with Christian Dietrich the problem reports we are getting in. Until we now managed to get less problem reports in than we are processing. Christian and I are those who care most about user problems and we have fixed together the majority of bugs for this and the past releases. Christian does an incredible job! We will happily share insights on the current state on Xtext at the Unconference and all conference days.&lt;/p&gt;
&lt;p&gt;The past months I starting getting involved into the Eclipse Platform itself. While before I completely focussed on Xtext development and just used the platform, I thought it was time to give something back. I am using Eclipse every day and still love to work with it. I am recognizing that others prefer other IDEs, or even new ones are built, and there are reasons for that. But still for complex development tasks I believe that an extensible desktop IDE like Eclipse is the best tool. Eclipse has some flaws, and I could help there. Now I am frequently contributing to the Eclipse Platform (with focus on performance, usability and stability) and found into the development process, which took me some time. Because of this engagement I am expecting to have some interersting talks on platform development with some driving persons like Lars Vogel, Dani Megert, Alexander Kurtakov, Mickael Istria, Mikaël Barbero or Andrey Loskutov. I have to thank them for guiding me in the process and reviewing my changes carefully. Guys, I owe you a beer at the Nestor bar!&lt;/p&gt;
&lt;h2&gt;A conference day (almost) never ends&lt;/h2&gt;
&lt;p&gt;Nestor bar, the place to be after the long conference day! You will find me there each evening from monday on till late. Like every year it will be hard to celebrate long and get up early. But be sure, I’ll manage that. It isn’t the first time, and won’t be the last. The party ain’t over until it’s over.&lt;/p&gt;
&lt;p&gt;I’m not staying at Nestor; like last year I reserved early a room at the nearby Villa Forêt. It is just a 5 minute walk (and some walking does not harm) and fine for me. It was in this hotel where I met Philip Wenig some years ago at breakfast. Ever since then I had nice talks with him and I always enjoy that. This year I already met him twice: At the Eclipse DemoCamp in Zurich, and at Eclipse Hackathon Hamburg.&lt;/p&gt;
&lt;h2&gt;Talks at the main conference&lt;/h2&gt;
&lt;p&gt;This year, besides my Xtend talk at the Unconference, I will give 2 talks at EclipseCon:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;screenshot 21.png&quot; class=&quot;alignnone size-full wp-image-855&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/screenshot-21.png?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/introduction-expression-languages-xtext&quot;&gt;&lt;strong&gt;“Introduction to Expression Languages with Xtext”&lt;/strong&gt;&lt;/a&gt; (Tuesday 14:30, Silchersaal) will give you some patterns in Xtext grammers when you need to embed expressions in your language. Xtext ships with Xbase, which is a full expression langauge that you can easily integrate, but sometimes Xbase is not the right choice for you. Xbase is tightly bound to the Java typesystem and JDT, and for your language this could be undesired. Then you have to build your own expression language, which is a bit advanced. But you can learn a lot from Xbase, and in this talk I will show some grammar patterns that you could take from Xbase. I already gave this talk at EclipseCon France this year, so most of the slides are fortunately prepared.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;screenshot 20.png&quot; class=&quot;alignnone size-full wp-image-856&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/screenshot-20.png?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Different for my second talk: &lt;strong&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/advanced-oomph-setup-authoring&quot;&gt;“Advanced Oomph Setup Authoring”&lt;/a&gt;&lt;/strong&gt; (Wednesday 12:00, Silchersaal). This is completely new, and I am right now working on the slide deck. I was responsible for developing Xtext’s &lt;a href=&quot;https://projects.eclipse.org/projects/tools.oomph&quot;&gt;Oomph&lt;/a&gt; setup, which is compared to other setups at Eclipse more complex. But I have learned much from the other setups. Again, there are some patterns that can be recognized among the different setups. I will show and explain screenshots from different setups and discuss some advantages or disadvantages from then. Oomph is a mighty framework, and creating good setups is a time consuming and error prone work. The information given in this talk should give some help to author more robust setups, and build them faster. Advanced Oomph users might recognize that they do already much right, but even they might get the one or other idea to enhance their setups. Users rather new with Oomph will get the most out of this talk. They should at least have a basic idea about Oomph project setups.&lt;/p&gt;
&lt;h2&gt;Lightning Talks at the itemis booth&lt;/h2&gt;
&lt;p&gt;This year we will give some 5-Minute Lightning Talks at our booth in pauses. We have a lot of interesting small talks this time, from Xtext to Java 9, and even where plastic plants play a role. Just come around to the exhibitor’s area in front of the theater and get some inspiration.&lt;/p&gt;
&lt;p&gt;Also here I have 2 slots:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tuesday 15:50: &lt;strong&gt;“What’s new in Eclipse Photon?”&lt;/strong&gt;: Let me show you a sneak preview on some features coming in Photon. You will see some of my contributions and some other.&lt;/li&gt;
&lt;li&gt;Wednesday 15:20: &lt;strong&gt;“A committer’s view on AERI”&lt;/strong&gt;: As said before, &lt;a href=&quot;https://www.codetrails.com/error-analytics/&quot;&gt;AERI&lt;/a&gt; helped me a lot to improve Xtext and Eclipse Platform. I’ll show you what committers see from problems reported to it and how it can help to find bugs. Also, a big Thank You to the guys from Codetrails for the support!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/itemis/&quot;&gt;Follow @itemis&lt;/a&gt; on Twitter to get notice on further talks from us!&lt;/p&gt;
&lt;h2&gt;The most important thing at EclipseCon is…&lt;/h2&gt;
&lt;p&gt;the people! I love to meet all the people again, from which most of them I only see once a year. This year I have already attended &lt;a href=&quot;https://www.eclipseconverge.org/na2017/&quot;&gt;Eclipse Converge&lt;/a&gt;/, &lt;a href=&quot;https://cfp.devoxx.us/2017/talk/YLN-6781/Tackling_Performance_Issues_with_YourKit&quot;&gt;DevoXX US&lt;/a&gt; and EclipseCon France, so some of you folks I have already met again. But EclipseCon Europe is by far larger and more intensive. To all the people I already know, from year to year they become more.&lt;/p&gt;
&lt;h2&gt;Eclipse on the roll&lt;/h2&gt;
&lt;p&gt;It is a pleasure to see which companies and projects joined the Eclipse Foundation recently. Since I have a background in Java Enterprise development from early beginnings (yes, I had to implement bean managed persistence with EJB 1.0 in the ancient days and it was NOT funny!), I was delighted to see EE4J at Eclipse. Then IBM’s J9, Deeplearning4J, and the story is not over yet. If this continues, the Eclipse Foundation has a bright future and I am glad that itemis is a driving part of the story.&lt;/p&gt;
&lt;p&gt;For this year’s EclipseCon Europe some of this hot new stuff might come a bit too late, but I expect more talks related to these exciting technologies next year. Yes, there are already some talks, but I think the focus will shift from now on.&lt;/p&gt;
&lt;h2&gt;And finally: Time to rest&lt;/h2&gt;
&lt;p&gt;After EclipseCon I’m taking a week off. I need this already, and will desperately need this after this exciting and exhausting week. Back to my beloved family, who is awaiting me after a long week.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/kthoms.wordpress.com/819/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/kthoms.wordpress.com/819/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=kthoms.wordpress.com&amp;amp;blog=6829080&amp;amp;post=819&amp;amp;subd=kthoms&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 18 Oct 2017 15:38:19 +0000</pubDate>
</item>
<item>
	<title>itemis: About the Power of Open Source Development at Eclipse</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/about-the-power-of-open-source-development-at-eclipse</guid>
	<link>https://blogs.itemis.com/en/about-the-power-of-open-source-development-at-eclipse</link>
	<description>&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;As a project deeply integrated with Eclipse JDT, Xtext has sometimes also to use internal API. This is, for example, necessary to leverage best performance of accessing Java elements. We try to avoid this whenever possible sometimes even by duplicating the code, and we never faced a problem for several years in this regard.&lt;/span&gt;&lt;/p&gt;  
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This October Eclipse released &lt;/span&gt;&lt;a href=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Oxygen.1a&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, which added Java 9 and JUnit 5 support to the recently released Oxygen.1 release. Java 9 support was a major effort for the JDT team and the fast availability to Eclipse users right after &lt;/span&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/9-relnotes-3622618.html&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;release of Java 9&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; last month proves the vibrant nature of Eclipse projects and the enthusiasm developers put into their projects. And naturally this feature required some major changes to JDT’s internals.&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;Small change in JDT – great impact for Xtext users&lt;/h2&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;One of these refactorings lead to a signature change in one of JDT’s internal methods that Xtext makes use of. This is a small change, but crucial for Xtext users. All current productive versions of Xtext including Xtext 2.12, which participates in the Eclipse Oxygen release train, are compiled against this method and Xtext plugins would fail when running on JDT when this method would not be available in the specific signature. &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;At itemis we care about quality of the Eclipse projects we are involved in. A very valuable source information for us is the &lt;/span&gt;&lt;a href=&quot;https://www.codetrails.com/error-analytics/&quot;&gt;&lt;span&gt;Eclipse Automatic Error Reporting System&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (AERI). We actively scan reports there, since these are real issues real users have out there. Without AERI, the hurdle to report problems was rather high: You need an Eclipse Bugzilla account, find the right category and describe manually your problem. Many issues were not reported then. Now it is just one click to automatically submit a report. And the more users report the same issue, the more prominent this is shown to us developers.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;On Monday before the final release candidate there was suddenly a report on a linking problem, which showed the following excerpt in its stack trace:&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre class=&quot;prettyprint&quot;&gt;java.lang.NoSuchMethodError: &lt;br /&gt;org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots&lt;br /&gt;(Lorg/eclipse/jdt/core/IClasspathEntry;Lorg/eclipse/jdt/internal/compiler/util/ObjectVector;Ljava/&lt;br /&gt;util/HashSet;Lorg/eclipse/jdt/core/IClasspathEntry;ZLjava/util/Map;)V&lt;br /&gt;&lt;br /&gt;at org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.collectSourcePackageFragmentRoots&lt;br /&gt;(JdtTypeProvider.java:539)&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br /&gt;From time to time there are similar reports, which usually indicate faulty configurations like a version mixture of Xtext bundles. AERI reports contain some information on the available bundles and their versions in the execution environment, which help identifying the context of the problem. Now this one was strange: It showed the version 3.1.50 of bundle org.eclipse.jdt.core installed. This version was unknown to us – Eclipse Oxygen.1 was delivered with version 3.1.0.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;As we detected this problem it was my itemis colleague Christian Dietrich who immediately got into contact with the JDT team to discuss this issue and raised &lt;/span&gt;&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=525462&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Bug#525462&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;. Stephan Herrmann from the JDT team, also an active Xtext user, and Dani Megert worked with us to address this issue. Finally, it was decided together that the missing method would be added again. The release of Oxygen.1a was already in progress, and developers were informed through the &lt;/span&gt;&lt;a href=&quot;https://dev.eclipse.org/mhonarc/lists/cross-project-issues-dev/msg14907.html&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;cross-project mailing list&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; about this important issue.&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Fortunately the Eclipse Platform team agreed to respin the whole Oxygen.1a simultaneous release. There were two other issues with the JDT and Maven tooling, and these problems are solved with the Oxygen.1a release before all users are affected.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We from the Xtext team will now carefully review and reduce internal API usage and work together with the JDT team to find proper replacements or evolve suitable public API where it is missing. Thanks to Christian the issue was immediately resolved in Xtext’s source, so that upcoming Xtext 2.13 already does not use this specific internal API anymore.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Since Xtext is used in many different release versions out there it will take time until the internal API is not used by users out there, although the code base might be clean soon already. Further we will discuss internally and cross-team at EclipseCon how we will detect such situations even earlier. In the past we had builds running against several Eclipse versions, but you can imagine that keeping this alive is eating plenty resources both of developers and build servers. To assure our high support requirements it might be necessary to build this up again.&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img alt=&quot;open-source-team-work.jpg&quot; height=&quot;344&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Xtext/open-source-team-work.jpg?t=1508337588986&amp;amp;width=724&amp;amp;height=344&amp;amp;name=open-source-team-work.jpg&quot; style=&quot;background-color: transparent; color: #4a4a4a; font-size: 16px; font-weight: 300;&quot; width=&quot;724&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Eclipse: Open source development at its best&lt;/h2&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;At the time when the problem was detected there were 15 reports of this problem in AERI. Sounds much, but actually this is really just a few. Just consider the case that Oxygen.1a went live without detecting this, all Xtext users would have been affected. It is people like Christian, Stephan and Dani to thank that a disaster was avoided. This again shows the great co-working at Eclipse across projects and across companies.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Speaking of Xtext 2.13, the Xtext team itself is in its final release phase and we’ll release on October 20th, just in time for &lt;a href=&quot;https://www.eclipsecon.org/europe2017/&quot;&gt;EclipseCon Europe in Ludwigsburg&lt;/a&gt;! If you are attending EclipseCon and have questions on the new release, the future of Xtext or just want to drink a beer with us, come to the itemis booth (booth 13) or later to the bar at Nestor hotel. We can be bribed with a beer to share valuable internal insights and tips for you :)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;After this EclipseCon and Xtext release we are not going to rest a moment and will continue to make Xtext even more rock solid and improve its usability, stability and performance. Note that our Xtext team at itemis offers &lt;/span&gt;&lt;a href=&quot;https://info.itemis.com/professional-xtext-support&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Professional Support Services for Xtext&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; support plans. For your project consider to get us on board, together we can make your project even more successful.&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;a class=&quot;cta_button&quot; href=&quot;https://info.itemis.com/cs/ci/?pg=6f3a83c3-6d86-4cab-b702-f9702d201e70&amp;amp;pid=761475&amp;amp;ecid=&amp;amp;hseid=&amp;amp;hsic=&quot;&gt;&lt;img alt=&quot;Get Professional Support&quot; class=&quot;hs-cta-img &quot; src=&quot;https://no-cache.hubspot.com/cta/default/761475/6f3a83c3-6d86-4cab-b702-f9702d201e70.png&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fabout-the-power-of-open-source-development-at-eclipse&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 18 Oct 2017 14:40:00 +0000</pubDate>
	<author>thoms@itemis.de (Karsten Thoms)</author>
</item>
<item>
	<title>Eclipse Announcements: Eclipse Science Advances Open Source Technology for Scientific Research</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/nu-at-0M51U/20171018_scienceopensource.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/nu-at-0M51U/20171018_scienceopensource.php</link>
	<description>The Eclipse Science Working Group, a working group of the Eclipse Foundation, today announced the new releases of five open source projects used by the scientific research community.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/nu-at-0M51U&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 18 Oct 2017 14:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse Newsletter | Utility Belt: Projects and Tools</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/UCZn0gpPNNg/</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/UCZn0gpPNNg/</link>
	<description>Learn more about JUnit 5, e4 on JavaFX, scripting with EASE, embedded tools and Eclipse CDT, the Ferret search tool, and software ethics.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/UCZn0gpPNNg&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 18 Oct 2017 10:02:00 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2017: Download the EclipseCon 2017 App</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/europe2017/news/3154 at https://www.eclipsecon.org/europe2017</guid>
	<link>https://www.eclipsecon.org/europe2017/news/download-eclipsecon-2017-app</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Create your EclipseCon schedule with the app from EclipseSource. The app provides you with the program organized by track or by date and time with the complete abstract and speaker information. You can locate your destination with the built in maps of the conference venue and its surroundings. Login to eclipsecon.org during the conference to submit feedback on the talks. Download from these links:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		&lt;a href=&quot;https://itunes.apple.com/us/app/eclipsecon-europe-2017/id1280396790?l=de&amp;amp;ls=1&amp;amp;mt=8&quot; target=&quot;_blank&quot;&gt;iOS: iTunes Preview&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;
		&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.eclipsesource.eclipsecon&quot; target=&quot;_blank&quot;&gt;Android: Google Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We asked the EclipseSource team to tell us more about the app:&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/news/download-eclipsecon-2017-app&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/europe2017/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/App%20screens.png?itok=8VOK1QUY&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 17 Oct 2017 14:22:18 +0000</pubDate>
</item>
<item>
	<title>itemis: Formatting for the Masses</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/formatting-for-the-masses</guid>
	<link>https://blogs.itemis.com/en/formatting-for-the-masses</link>
	<description>&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Reading source code happens way more often than writing it. And reading code is a lot easier when it is well formatted. Linebreaks and indentations are guiding the reader and it is more obvious in which context things are happening. Doing formatting completely manually is simply not an option, especially for larger changes. For that reason general purpose languages, like Java, do have many different implementations for automatic code formatters or “pretty printers”. &lt;/span&gt;&lt;/p&gt;  
&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;All implementations come with a default behaviour that works, but this is not enough. Formatting has always been a matter of taste and therefore users want to customize all the different settings to their liking. Therefore &lt;strong&gt;professional formatting tools like Eclipse JDT&lt;/strong&gt; offer a gazillion number of options.&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;img alt=&quot;Formatting-code-Eclipse-JDT.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Software%20Development/Formatting-code-Eclipse-JDT.png?t=1508337588986&amp;amp;width=640&amp;amp;name=Formatting-code-Eclipse-JDT.png&quot; style=&quot;width: 640px; display: block; margin-left: auto; margin-right: auto;&quot; width=&quot;640&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;These options can be stored as preferences and shared together with the code. Sounds cool, but it is still not enough for “everybody”. People want to adjust those settings or when, they come to the point where the tool does not offer the 'right' options, they will use tag-comments in JDT. This will make the formatter shut up for a specific area.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;img alt=&quot;formatting-code.png&quot; height=&quot;392&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Software%20Development/formatting-code.png?t=1508337588986&amp;amp;width=286&amp;amp;height=392&amp;amp;name=formatting-code.png&quot; width=&quot;286&quot; /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The formatter can be explicitly switched on and off to manually format the code. This is a workaround and not a solution. The problem is that “everybody” wants to format their code differently. Some language designers try to circumvent this problem by mandating the correct formatting on the syntax level as Python does it, but this is oftentimes limited to the indentation level and not to the overall formatting rules.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;For most general purpose languages, there are a gazillion tools to format the code in different ways with different options and the user has the choice – the choice of the tool, the choice of options – everything can be tailored to specific needs. &lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Formatting code for DSLs with Xtext&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;For &lt;strong&gt;domain specific languages (DSL)&lt;/strong&gt; there is nothing like that coming out of the box. Looking at frameworks like &lt;a href=&quot;https://www.itemis.com/en/xtext/&quot;&gt;Eclipse Xtext&lt;/a&gt;, it is really a breeze to create languages, but there is no formatter coming for free. Of course, &lt;strong&gt;the framework is offering a powerful API to define formatters&lt;/strong&gt;. Decisions can be made on grammar level for all instances of the DSL and in addition you have access to a specific part of the abstract syntax tree so can make decisions based on the structure and values of your model, too. Having the option to format code based on syntax and structure sounds really cool and actually it is, but it’s a lot of code that needs to be written and it’s not “that” easy.&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;img alt=&quot;Formatting.code.png&quot; height=&quot;261&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Software%20Development/Formatting.code.png?t=1508337588986&amp;amp;width=724&amp;amp;height=261&amp;amp;name=Formatting.code.png&quot; width=&quot;724&quot; /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;After you are satisfied with your implementation and your formatter works as you wanted, your users might see that differently. As already said, &lt;strong&gt;formatting is a matter of taste&lt;/strong&gt; and they might come up with the need for options. An additional newline here, no space there... these options do add a lot of complexity to the formatter code. And that's certainly not for free. Time to define the canonical formatting for your DSL? Or can we do better? How about &lt;strong&gt;formatters that take examples and learn how to format similar documents?&lt;/strong&gt; Intelligent formatters that nobody needs to write manually and that are driven by your coding style? Can this be done?&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We started to ask ourselves the same questions and looked at existing libraries out there. As we &lt;strong&gt;use &lt;a href=&quot;http://www.antlr.org/&quot;&gt;AntLR&lt;/a&gt; in Xtext&lt;/strong&gt; heavily, we looked in that direction, too. And we found &lt;a href=&quot;https://github.com/antlr/codebuff&quot;&gt;a very promising project named Codebuff&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, that is driven by Terence Parr, the mastermind behind AntLR. It aims to do formatting by example and the only thing you need is a grammar and a bunch of examples.&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;img alt=&quot;formatting-for-the-masses.jpg&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Xtext/formatting-for-the-masses.jpg?t=1508337588986&amp;amp;width=724&amp;amp;name=formatting-for-the-masses.jpg&quot; style=&quot;width: 724px;&quot; title=&quot;formatting-for-the-masses.jpg&quot; width=&quot;724&quot; /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;We have played around with it and it really looks promising. In our &lt;/span&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/formatting-masses&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;talk&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; at the &lt;/span&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;EclipseCon&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; Europe at Wednesday, October 25, 2017, 02:45 pm to 03:20 pm Sebastian and I will give you an overview of what we have figured out, how it works and how it might integrate with Xtext. &lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;See you there!&lt;/span&gt;&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fformatting-for-the-masses&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 17 Oct 2017 13:28:35 +0000</pubDate>
	<author>schill@itemis.com (Holger Schill)</author>
</item>
<item>
	<title>Andrey Loskutov: SpotBugs 3.1.0 RC7 with Java 9 support</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-2324578057630268882</guid>
	<link>http://javaclipse.blogspot.com/2017/10/spotbugs-310-rc7-with-java-9-support.html</link>
	<description>&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot;&gt;&lt;b&gt;FindBugs is dead, long live SpotBugs!&lt;/b&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://spotbugs.github.io/images/logos/spotbugs_logo_300px.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://spotbugs.github.io/images/logos/spotbugs_logo_300px.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;I would like to introduce here &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;SpotBugs&lt;/a&gt;, a spiritual successor of &lt;a href=&quot;http://findbugs.sourceforge.net/&quot;&gt;FindBugs&lt;/a&gt;, crafted by the community.&lt;br /&gt;&lt;br /&gt;We've just released &lt;a href=&quot;https://github.com/spotbugs/spotbugs/blob/3.1.0_RC7/CHANGELOG.md&quot;&gt;3.1.0 RC7 version&lt;/a&gt; and hope to release the final 3.1.0 this weekend.&lt;br /&gt;One of the main drivers to release &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;SpotBugs&lt;/a&gt; now is to support Java 9, but there were also few other exciting changes in the previous &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;SpotBugs&lt;/a&gt; milestones, please check them for more details: &lt;a href=&quot;https://github.com/spotbugs/spotbugs/releases&quot;&gt;https://github.com/spotbugs/spotbugs/releases&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;We also have a new &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;SpotBugs&lt;/a&gt; Eclipse plugin, here are the links to the update sites: &lt;a href=&quot;http://spotbugs.readthedocs.io/en/latest/eclipse.html&quot;&gt;http://spotbugs.readthedocs.io/en/latest/eclipse.html&lt;/a&gt; and &lt;a href=&quot;https://marketplace.eclipse.org/content/spotbugs-eclipse-plugin&quot;&gt;Eclipse marketplace entry&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;We need your help&lt;/b&gt;!&lt;br /&gt;Please check if you see regressions and don't hesitate to report issues to the bug tracker!&lt;br /&gt;&lt;br /&gt;&lt;b&gt;SpotBugs links&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;Home: &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;https://spotbugs.github.io&lt;/a&gt;&lt;br /&gt;Mailing list: &lt;a href=&quot;https://github.com/spotbugs/discuss/issues?q=&quot;&gt;https://github.com/spotbugs/discuss/issues?q=&lt;/a&gt;&lt;br /&gt;Bug tracker: &lt;a href=&quot;https://github.com/spotbugs/spotbugs/issues&quot;&gt;https://github.com/spotbugs/spotbugs/issues&lt;/a&gt;&lt;br /&gt;Git repository: &lt;a href=&quot;https://github.com/spotbugs/spotbugs&quot;&gt;https://github.com/spotbugs/spotbugs&lt;/a&gt;&lt;br /&gt;Manual: &lt;a href=&quot;http://spotbugs.readthedocs.io/en/latest&quot;&gt;http://spotbugs.readthedocs.io/en/latest&lt;/a&gt;&lt;br /&gt;Migration guide: &lt;a href=&quot;http://spotbugs.readthedocs.io/en/latest/migration.html&quot;&gt;http://spotbugs.readthedocs.io/en/latest/migration.html&lt;/a&gt;&lt;br /&gt;Eclipse plugin nightly build: &lt;a href=&quot;https://spotbugs.github.io/eclipse-latest&quot;&gt;https://spotbugs.github.io/eclipse-latest&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;P.S.&lt;/b&gt;&lt;br /&gt;If you are curious about the history of &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;SpotBugs&lt;/a&gt; and why &lt;a href=&quot;http://findbugs.sourceforge.net/&quot;&gt;FindBugs&lt;/a&gt; isn't there anymore, please read through this mails:&lt;br /&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://mailman.cs.umd.edu/pipermail/findbugs-discuss/2016-November/004321.html&quot;&gt;https://mailman.cs.umd.edu/pipermail/findbugs-discuss/2016-November/004321.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://mailman.cs.umd.edu/pipermail/findbugs-discuss/2017-September/004383.html&quot;&gt;https://mailman.cs.umd.edu/pipermail/findbugs-discuss/2017-September/004383.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 17 Oct 2017 07:37:38 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>Donald Raab: Zip Symmetry</title>
	<guid isPermaLink="false">https://medium.com/p/a857a934ee26</guid>
	<link>https://medium.com/@donraab/zip-symmetry-a857a934ee26?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Another tale of &lt;a href=&quot;https://medium.com/@donraab/symmetric-sympathy-2c59d4541d60&quot;&gt;Symmetric Sympathy&lt;/a&gt; in the land of object and primitive collections.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*qjrl-yuxEoiHXVvVj8sNqg.jpeg&quot; /&gt;Island of Balos, Crete&lt;/figure&gt;&lt;p&gt;I gave a talk this year at JavaOne titled &lt;strong&gt;&lt;em&gt;API Deep Dive: Designing Eclipse Collections&lt;/em&gt;&lt;/strong&gt; [CON6133] with Nikhil Nanivadekar. I really enjoyed this talk, as I got to recall twelve plus years of development in forty-five minutes. The slides are now available online &lt;a href=&quot;https://static.rainfocus.com/oracle/oow17/sess/1494212572063001UbJA/PF/JavaOne2017_CON6133_12_1507248789169001TA3b.pptx&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Symmetry continues to drive the design and implementation of new features in &lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt;. On slide 36 of the presentation (see below), I indicated where we are currently missing some symmetry between object and primitive collections.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/720/1*5NXdHfz7VnM3WyT-ZZ83IQ.png&quot; /&gt;Where is primitive eager zip?&lt;/figure&gt;&lt;p&gt;After returning home from JavaOne, I decided to spend Columbus Day implementing &lt;em&gt;zip&lt;/em&gt; for primitive eager lists in Eclipse Collections.&lt;/p&gt;&lt;h4&gt;What is zip?&lt;/h4&gt;&lt;p&gt;According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Convolution_(computer_science)&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;&lt;blockquote&gt;In computer science, specifically formal languages, convolution (sometimes referred to as zip) is a function which maps a tuple of sequences into a sequence of tuples.&lt;/blockquote&gt;&lt;p&gt;To put this slightly differently, if you have two lists of objects, and you zip them together, you will wind up with a single list of pairs of objects.&lt;/p&gt;&lt;p&gt;Here’s an example of how you can use &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/api/list/ListIterable.html#zip-java.lang.Iterable-&quot;&gt;zip&lt;/a&gt; today in Eclipse Collections (EC) for object collections.&lt;/p&gt;&lt;pre&gt;MutableList&amp;lt;String&amp;gt; one = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;br /&gt;ImmutableList&amp;lt;String&amp;gt; two = Lists.&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;one&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;three&quot;&lt;/strong&gt;);&lt;br /&gt;MutableList&amp;lt;Pair&amp;lt;String, String&amp;gt;&amp;gt; zipOneAndTwo = one.zip(two);&lt;br /&gt;ImmutableList&amp;lt;Pair&amp;lt;String, String&amp;gt;&amp;gt; zipTwoAndOne = two.zip(one);&lt;/pre&gt;&lt;p&gt;If we output &lt;em&gt;zipOneAndTwo&lt;/em&gt; and &lt;em&gt;zipTwoAndOne&lt;/em&gt; they look as follows:&lt;/p&gt;&lt;pre&gt;[1:one, 2:two, 3:three]&lt;br /&gt;[one:1, two:2, three:3]&lt;/pre&gt;&lt;p&gt;We can change the first list to &lt;em&gt;Integer&lt;/em&gt; objects like so.&lt;/p&gt;&lt;pre&gt;MutableList&amp;lt;Integer&amp;gt; one = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3);&lt;br /&gt;ImmutableList&amp;lt;String&amp;gt; two = Lists.&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;one&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;three&quot;&lt;/strong&gt;);&lt;br /&gt;MutableList&amp;lt;Pair&amp;lt;Integer, String&amp;gt;&amp;gt; zipOneAndTwo = one.zip(two);&lt;br /&gt;ImmutableList&amp;lt;Pair&amp;lt;String, Integer&amp;gt;&amp;gt; zipTwoAndOne = two.zip(one);&lt;/pre&gt;&lt;p&gt;We still get the same output, because of how &lt;em&gt;Pair&lt;/em&gt; defines &lt;em&gt;toString&lt;/em&gt;().&lt;/p&gt;&lt;pre&gt;[1:one, 2:two, 3:three]&lt;br /&gt;[one:1, two:2, three:3]&lt;/pre&gt;&lt;p&gt;I hate boxing ints as Integers. I’d like to be able to use an &lt;em&gt;IntList&lt;/em&gt; instead of a &lt;em&gt;List&lt;/em&gt; of &lt;em&gt;Integer&lt;/em&gt; objects. Previously in EC, we could not change the &lt;em&gt;MutableList&lt;/em&gt; of &lt;em&gt;Integer&lt;/em&gt; to a &lt;em&gt;MutableIntList&lt;/em&gt;. Now we can, but this new ability highlights a slight problem.&lt;/p&gt;&lt;pre&gt;MutableIntList one = IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3);&lt;br /&gt;ImmutableList&amp;lt;String&amp;gt; two = Lists.&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;one&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;three&quot;&lt;/strong&gt;);&lt;br /&gt;MutableList&amp;lt;IntObjectPair&amp;lt;String&amp;gt;&amp;gt; zipOneAndTwo = one.zip(two);&lt;/pre&gt;&lt;pre&gt;// The following code does not compile&lt;br /&gt;&lt;strong&gt;&lt;em&gt;ImmutableList&amp;lt;ObjectIntPair&amp;lt;String&amp;gt;&amp;gt; zipTwoAndOne = two.zip(one);&lt;/em&gt;&lt;/strong&gt;&lt;/pre&gt;&lt;p&gt;I have added a method zip to primitive lists with the following signature (&lt;em&gt;IntList&lt;/em&gt; used as an example below).&lt;/p&gt;&lt;pre&gt;&lt;em&gt;/**&lt;br /&gt; * Returns a {&lt;/em&gt;&lt;strong&gt;&lt;em&gt;@code &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;MutableList} formed from this {&lt;/em&gt;&lt;strong&gt;&lt;em&gt;@code &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;MutableIntList} and a {&lt;/em&gt;&lt;strong&gt;&lt;em&gt;@code &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;ListIterable} by&lt;br /&gt; * combining corresponding elements in pairs. If one of the two Lists is longer than the other, its&lt;br /&gt; * remaining elements are ignored.&lt;br /&gt; *&lt;br /&gt; * &lt;/em&gt;&lt;strong&gt;&lt;em&gt;@since &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;9.1.&lt;br /&gt; */&lt;br /&gt;&lt;/em&gt;default &amp;lt;T&amp;gt; MutableList&amp;lt;IntObjectPair&amp;lt;T&amp;gt;&amp;gt; zip(ListIterable&amp;lt;T&amp;gt; list)&lt;/pre&gt;&lt;p&gt;We cannot (yet) zip an object list with a primitive list. By adding a feature in one direction (primitive+object), I have discovered (or created) a lack of symmetry in the other direction (object+primitive).&lt;/p&gt;&lt;h4&gt;One small step for a code generator…&lt;/h4&gt;&lt;p&gt;We can zip two object lists together regardless of the object type, so I wanted to at least be able to zip two int lists, two double lists, two short lists, etc. This is in addition to now being able to zip a primitive list with an object list. So the following signature is also included and code generated today (example below with &lt;em&gt;zipInt&lt;/em&gt; on &lt;em&gt;IntList&lt;/em&gt;). A method &lt;em&gt;zipDouble&lt;/em&gt; is also generated for &lt;em&gt;DoubleList&lt;/em&gt;, &lt;em&gt;zipFloat&lt;/em&gt; for &lt;em&gt;FloatList&lt;/em&gt;, etc. I used a naming pattern which will easily allow additional forms to be added later if there are use cases for them that surface.&lt;/p&gt;&lt;pre&gt;&lt;em&gt;/**&lt;br /&gt; * Returns a {&lt;/em&gt;&lt;strong&gt;&lt;em&gt;@code &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;MutableList} formed from this {&lt;/em&gt;&lt;strong&gt;&lt;em&gt;@code &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;MutableIntList} and another {&lt;/em&gt;&lt;strong&gt;&lt;em&gt;@code &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;IntList} by&lt;br /&gt; * combining corresponding elements in pairs. If one of the two {&lt;/em&gt;&lt;strong&gt;&lt;em&gt;@code &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;IntList}s is longer than the other, its&lt;br /&gt; * remaining elements are ignored.&lt;br /&gt; *&lt;br /&gt; * &lt;/em&gt;&lt;strong&gt;&lt;em&gt;@since &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;9.1.&lt;br /&gt; */&lt;br /&gt;&lt;/em&gt;default MutableList&amp;lt;IntIntPair&amp;gt; zipInt(IntList list)&lt;/pre&gt;&lt;p&gt;Here’s an example zipping two &lt;em&gt;IntLists&lt;/em&gt; together using the method &lt;em&gt;zipInt&lt;/em&gt;.&lt;/p&gt;&lt;pre&gt;MutableIntList one = IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3);&lt;br /&gt;ImmutableIntList two = IntLists.&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;.with(10, 20, 30);&lt;br /&gt;MutableList&amp;lt;IntIntPair&amp;gt; zipOneAndTwo = one.zipInt(two);&lt;br /&gt;ImmutableList&amp;lt;IntIntPair&amp;gt; zipTwoAndOne = two.zipInt(one);&lt;/pre&gt;&lt;p&gt;If I output both zipped lists the result is as follows:&lt;/p&gt;&lt;pre&gt;[1:10, 2:20, 3:30]&lt;br /&gt;[10:1, 20:2, 30:3]&lt;/pre&gt;&lt;p&gt;We can now zip eight forms of primitive lists to object lists today. We can also zip “like” forms of primitive lists as well (&lt;em&gt;IntList&lt;/em&gt;-&amp;gt;&lt;em&gt;zipInt&lt;/em&gt;, &lt;em&gt;DoubleList&lt;/em&gt;-&amp;gt;&lt;em&gt;zipDouble&lt;/em&gt;, etc.). I am hopeful that this functionality will satisfy most needs for the foreseeable future.&lt;/p&gt;&lt;h4&gt;The North Remembers&lt;/h4&gt;&lt;p&gt;Symmetry does not forget, and when it is missing and needed, developers will not always easily forgive. Achieving perfect symmetry for the sake of symmetry itself is a fool’s errand. If you find yourself in the position of needing more symmetry in this space, remember &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;Eclipse Collections is open source&lt;/a&gt;. You can put in a request and perhaps someone may implement it on your behalf, but the quickest way to completion may be getting actively involved in the Eclipse Collections community and making a contribution. We will make sure you get all the help you need if you are interested in contributing.&lt;/p&gt;&lt;h4&gt;The sequel?&lt;/h4&gt;&lt;p&gt;We have zip today in Eclipse Collections but we do not yet have its natural opposite: &lt;em&gt;unzip&lt;/em&gt;. Unzip would take a list of pairs, return a pair of lists. Unzip only makes sense on the object collection side, because you can only unzip a list of pairs. Sounds easy right? Unzip winds up more complex to define with primitives now supported in zip. If you have a &lt;em&gt;List&lt;/em&gt; of &lt;em&gt;Pair&lt;/em&gt;, you will get back a &lt;em&gt;Pair&lt;/em&gt; of &lt;em&gt;Lists&lt;/em&gt;. If you have a &lt;em&gt;List&lt;/em&gt; of &lt;em&gt;ObjectIntPair&lt;/em&gt;, you would want to get back a &lt;em&gt;Pair&lt;/em&gt; of &lt;em&gt;List&lt;/em&gt; and &lt;em&gt;IntList&lt;/em&gt;… and so on. The return type for unzip will be tricky to define, at least without complicating the API, which should require no parameters. I think we should wait a while before trying to solve this symmetry problem. However, there is a pattern which would be very nice to have, and may make using zip less attractive once we do have it. This pattern is &lt;strong&gt;&lt;em&gt;collectWithIndex&lt;/em&gt;&lt;/strong&gt;. We have &lt;strong&gt;&lt;em&gt;forEachWithIndex&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;injectIntoWithIndex&lt;/em&gt;&lt;/strong&gt; (primitive only) today. Oh, no... Stay tuned.&lt;/p&gt;&lt;p&gt;I hope this latest chapter in my tale of Symmetric Sympathy was interesting and informative.&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=a857a934ee26&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 13 Oct 2017 17:31:16 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2017: An invitation from the Science community</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/europe2017/news/3151 at https://www.eclipsecon.org/europe2017</guid>
	<link>https://www.eclipsecon.org/europe2017/news/invitation-science-community</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;h4&gt;
	by Tracy Miranda&lt;/h4&gt;
&lt;p&gt;You're invited to join the Science activities at EclipseCon Europe. Get involved by participating in:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		 &lt;a href=&quot;https://www.eclipsecon.org/europe2017/schedule_item/eclipse-science-unconference&quot;&gt;The Science Unconference&lt;/a&gt; - an session dedicated to Science Working Group projects&lt;/li&gt;
	&lt;li&gt;
		&lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/threesome-made-heaven-ease-python-jupyter-tutorial&quot;&gt;EASE Python scripting &amp;amp; Jupyter tutorial&lt;/a&gt; - a hands-on for scripting Eclipse with Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the program committee has selected 5 talks from the Eclipse science community:&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/news/invitation-science-community&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/europe2017/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/science%20square.png?itok=nBaEwh4d&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Fri, 13 Oct 2017 09:32:57 +0000</pubDate>
</item>
<item>
	<title>Paolo Patierno: Eclipse Hono : Virtual IoT meetup</title>
	<guid isPermaLink="false">http://paolopatierno.wordpress.com/?p=5478</guid>
	<link>https://paolopatierno.wordpress.com/2017/10/12/eclipse-hono-virtual-iot-meetup/</link>
	<description>&lt;p&gt;&lt;img alt=&quot;Virtual IoT - Hono&quot; class=&quot;alignnone size-full wp-image-5499&quot; src=&quot;https://paolopatierno.files.wordpress.com/2017/10/virtual-iot-hono.png?w=620&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;Yesterday, thanks to the Eclipse Foundation I had the chance to talk about &lt;a href=&quot;https://www.eclipse.org/hono/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Hono&lt;/a&gt; as speaker for this &lt;a href=&quot;https://www.meetup.com/Virtual-IoT/events/242190258/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;virtual IoT meetup&lt;/a&gt; as part of a meetup series where the focus is on the &lt;a href=&quot;https://iot.eclipse.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Eclipse IoT&lt;/a&gt; projects. I was with Kai Hudalla (Chief Software Architect at BoschSI) who is co-lead and main contributor on Hono.&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;It was my first virtual meetup and a really exciting experience for me with almost 90 “virtual” attendees and a lot of interesting questions showing the interest that developers had about this “new” project.&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;If you didn’t have a chance to watch the session or you want to re-watch it, you can find the recording on &lt;a href=&quot;https://www.youtube.com/watch?v=VEXuz2bFSrE&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt;; the slides deck is available &lt;a href=&quot;https://www.slideshare.net/paolopat/eclipse-hono-connect-command-control-80697771&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; as well.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/paolopatierno.wordpress.com/5478/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/paolopatierno.wordpress.com/5478/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=paolopatierno.wordpress.com&amp;amp;blog=15467422&amp;amp;post=5478&amp;amp;subd=paolopatierno&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 12 Oct 2017 05:54:47 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Automatic License Certification By The Numbers</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5356</guid>
	<link>https://waynebeaton.wordpress.com/2017/10/11/automatic-license-certification-by-the-numbers/</link>
	<description>&lt;p&gt;In 2016, we introduced the notion of &lt;a href=&quot;https://waynebeaton.wordpress.com/2017/01/13/whats-your-ip-due-diligence-type/&quot;&gt;license certification intellectual property (IP) due diligence&lt;/a&gt; (“Type A”) into the &lt;a href=&quot;https://www.eclipse.org/org/documents/Eclipse_IP_Policy.pdf&quot;&gt;Eclipse IP Policy&lt;/a&gt; with a goal in mind to automate the certification process. At that time, we started a process of evaluating tools that could be used for automatic validation and eventually discovered &lt;a href=&quot;https://github.com/nexB/scancode-toolkit&quot;&gt;Scancode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In our testing, we found that Scancode does a very good job of discovering licenses (and copyrights, which we may take better advantage of later), with the added bonus of having a very simple-to-use command-line interface (CLI) that produces reports in a handful of handy formats (including JSON and SPDX) that are easily machine readable.&lt;/p&gt;
&lt;p&gt;The Eclipse Webmaster integrated Scancode into the &lt;em&gt;Eclipse Genie&lt;/em&gt; process. Genie jumps into action when it notices a “Type A” third party content review request (“Contribution Questionnaire”) with attached source code, and PMC approval. If the licenses discovered in the attached content are compatible with the project license, Genie automatically license certifies the content.&lt;/p&gt;
&lt;p&gt;After running for a few months, it looks like we’re getting about a 50% hit rate. That is, about half of all third party content license certification requests are being automatically approved without needing to engage the Eclipse IP Team.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;typa&quot; class=&quot;alignnone size-full wp-image-5357&quot; src=&quot;https://waynebeaton.files.wordpress.com/2017/10/typa.png?w=640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Note that some of the older bumps in the graph come from requests that were retroactively designated as “Type A”, and that little bump in automatic approvals in March is from Webmaster testing.&lt;/p&gt;
&lt;p&gt;I’ll admit that it’s a little suspect to me that the graphs line up so closely starting in July. I’m pretty confident in the query and have reviewed the data, so it’s accurate as far as I know.&lt;/p&gt;
&lt;p&gt;It’ll be interesting to see how the pattern tracks over time.&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/waynebeaton.wordpress.com/5356/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/waynebeaton.wordpress.com/5356/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=waynebeaton.wordpress.com&amp;amp;blog=19425814&amp;amp;post=5356&amp;amp;subd=waynebeaton&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 11 Oct 2017 20:45:34 +0000</pubDate>
</item>
<item>
	<title>Geniutec: Working with Java 9 in Eclipse</title>
	<guid isPermaLink="false">https://www.genuitec.com/?p=534701</guid>
	<link>https://www.genuitec.com/working-java-9-eclipse/</link>
	<description>&lt;p&gt;Note: This blog was updated on October 11th, 2017 to reflect the release of Oxygen 1a which includes Java 9 support.The Java 9 GA release is just a few weeks old, and you can start developing with Java 9 in Eclipse, right now! All you need to do is download a suitable Oxygen 1a (4.7.1a) […]&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://www.genuitec.com/working-java-9-eclipse/&quot; rel=&quot;nofollow&quot;&gt;Working with Java 9 in Eclipse&lt;/a&gt; appeared first on &lt;a href=&quot;https://www.genuitec.com&quot; rel=&quot;nofollow&quot;&gt;Genuitec&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 11 Oct 2017 20:00:50 +0000</pubDate>
</item>
<item>
	<title>Vincent Zurczak: Custom Setup Task in OOMPH and namespace conflict</title>
	<guid isPermaLink="false">http://vzurczak.wordpress.com/?p=676</guid>
	<link>https://vzurczak.wordpress.com/2017/10/11/custom-setup-task-in-oomph-and-namespace-conflict/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/tools.oomph&quot;&gt;OOMPH&lt;/a&gt; is a solution that helps to install official and custom Eclipse distributions.&lt;/p&gt;
&lt;p&gt;Those who use it for their own distro can extend its behaviour thanks to setup tasks. A setup task is made up of both an EMF model (that extends the &lt;strong&gt;setup.ecore/#SetupTask&lt;/strong&gt; element from OOMPH) and Java code. This code is partially generated by EMF. People only have to complete the &lt;strong&gt;perform&lt;/strong&gt; method to make it do something at runtime. Obviously, OOMPH provides a wizard to help in the creation of such a thing.&lt;/p&gt;
&lt;p&gt;However, I recently had to maintain an existing set of setup tasks. And when I opened the genmodel file for my tasks, I had a weird error message in the genmodel editor.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://vzurczak.files.wordpress.com/2017/10/erreur.png&quot;&gt;&lt;img alt=&quot;EMF error due to conflicting namespaces&quot; class=&quot;aligncenter size-medium wp-image-677&quot; height=&quot;185&quot; src=&quot;https://vzurczak.files.wordpress.com/2017/10/erreur.png?w=300&amp;amp;h=185&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The exact error message indicates…&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br /&gt;
Problems encountered in the model&lt;br /&gt;
- The package 'http://www.eclipse.org/oomph/setup/1.0#/' has the same namespace URI 'http://www.eclipse.org/oomph/setup/1.0' as package 'platform:/resource/org.eclipse.oomph.setup/model/Setup.ecore#/'&lt;br /&gt;
- The package 'http://www.eclipse.org/oomph/setup/1.0#/' has the same namespace URI 'http://www.eclipse.org/oomph/setup/1.0' as package 'platform:/resource/org.eclipse.oomph.base/model/Base.ecore#/'&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That’s a weird message.&lt;br /&gt;
Even worse, it does not appear if you create a new setup task project. I compared everything: the models, the project settings… everything.&lt;/p&gt;
&lt;p&gt;Taking a detailed look at the error message, it indicates that two EMF projects from OOMPH export the same package. In fact, both packages export different classes but within the same namespace. And they reference each other (&lt;strong&gt;Setup&lt;/strong&gt; extends classes from &lt;strong&gt;Base&lt;/strong&gt;). Anyway, EMF does not know which package pick up as both could match.&lt;/p&gt;
&lt;p&gt;The workaround for this is to update the ecore model.&lt;br /&gt;
Indeed, the generated ecore contains…&lt;/p&gt;
&lt;pre class=&quot;brush: xml; title: ; notranslate&quot;&gt;&amp;lt;eClassifiers
   xsi:type=&quot;ecore:EClass&quot;
   name=&quot;YourTaskName&quot;
   eSuperTypes=&quot;http://www.eclipse.org/oomph/setup/1.0#//SetupTask&quot;&amp;gt;
&lt;/pre&gt;
&lt;p&gt;The super type is resolved by namespace.&lt;br /&gt;
If you reference it by the location of the ecore model, that will solve the problem.&lt;/p&gt;
&lt;pre class=&quot;brush: xml; title: ; notranslate&quot;&gt;&amp;lt;eClassifiers 
   xsi:type=&quot;ecore:EClass&quot;
   name=&quot;YourTaskName&quot;
   eSuperTypes=&quot;platform:/resource/org.eclipse.oomph.setup/model/Setup.ecore#//SetupTask&quot;&amp;gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;strong&gt;Setup&lt;/strong&gt; classes extends the &lt;strong&gt;Base&lt;/strong&gt; ones.&lt;br /&gt;
So, you can directly reference the &lt;strong&gt;Setup.ecore&lt;/strong&gt; file. You can also update your genmodel file with the URL of the existing generators.&lt;/p&gt;
&lt;pre class=&quot;brush: xml; title: ; notranslate&quot;&gt;usedGenPackages=&quot;platform:/resource/org.eclipse.oomph.base/model/Base.genmodel#//base platform:/resource/org.eclipse.oomph.setup/model/Setup.genmodel#//setup&quot;
&lt;/pre&gt;
&lt;p&gt;… instead of…&lt;/p&gt;
&lt;pre class=&quot;brush: xml; title: ; notranslate&quot;&gt;usedGenPackages=&quot;../../org.eclipse.oomph.base/model/Base.genmodel#//base ../../org.eclipse.oomph.setup/model/Setup.genmodel#//setup&quot;
&lt;/pre&gt;
&lt;p&gt;Eventually, you will opt for a solution that prevents the genmodel from rewriting the ecore file. Just remove the &lt;strong&gt;publicationLocation&lt;/strong&gt; attribute from your genmodel. Otherwise, every time you generate code from your genmodel file, it will rewrite the super types in your ecore file. Definitely not what you want.&lt;/p&gt;
&lt;p&gt;PS: I have still not understood why the error sometimes appears.&lt;br /&gt;
In my case, the ecore file defined several setup tasks in the same file. My other example did not. Maybe that’s the reason.&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/vzurczak.wordpress.com/676/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/vzurczak.wordpress.com/676/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=vzurczak.wordpress.com&amp;amp;blog=10081016&amp;amp;post=676&amp;amp;subd=vzurczak&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 11 Oct 2017 18:15:49 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2017: Come to the Meet &amp; Greet</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/europe2017/news/3147 at https://www.eclipsecon.org/europe2017</guid>
	<link>https://www.eclipsecon.org/europe2017/news/come-meet-greet</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Plan to attend the first social event of the week on Monday evening — the Meet &amp;amp; Greet.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Monday, October 23, 17:30 (after the Unconference)&lt;/li&gt;
	&lt;li&gt;Theater Foyer at the Forum&lt;/li&gt;
	&lt;li&gt;Beverages and snacks&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;New to the conference or community?&lt;/strong&gt; This casual reception is especially for you. We want to welcome you and connect you to the people in the community that *you* want to meet: project team leads, technical experts, program committee members, Board members, Foundation staffers, conference speakers. When you arrive, just ask your greeter for an introduction to whoever you would like to know.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Returning attendee or longtime community member?&lt;/strong&gt; The Meet &amp;amp; Greet is also for you. Renew your connections, reach out to new people, and cap off the Unconference with a beer and a snack.&lt;/p&gt;

&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/news/come-meet-greet&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/europe2017/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/MeetGreet.jpg?itok=UBmsqwm3&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 11 Oct 2017 18:13:21 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.1.AM3 for Eclipse Oxygen.1</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.1.am3-for-oxygen.1.html</guid>
	<link>https://tools.jboss.org/blog/4.5.1.am3-for-oxygen.1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.1.AM3 (Developer Milestone 3) build for Eclipse Oxygen.1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.1.AM3.html&quot;&gt;JBoss Tools 4.5.1 AM3&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.1.AM3.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift-io&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#openshift-io&quot;&gt;&lt;/a&gt;OpenShift.io&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;openshift-io-login&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#openshift-io-login&quot;&gt;&lt;/a&gt;OpenShift.io login&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is possible to login from JBoss Tools to OpenShift.io. A single account will be maintained per workspace. Once you initially logged onto OpenShift.io, all
      needed account information (tokens,…​) will be stored securely.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;There are two ways to login onto OpenShift.io:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;through the UI&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;via a third party service that will invoke the proper extension point&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;ui-based-login-to-openshift-io&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#ui-based-login-to-openshift-io&quot;&gt;&lt;/a&gt;UI based login to OpenShift.io&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the toobar, you should see a new icon &lt;span class=&quot;image&quot;&gt;&lt;img alt=&quot;Toolbar&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-16x16.png&quot; /&gt;&lt;/span&gt;. Click on it and it will launch the login.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If this is the first time you login to OpenShift.io or if you OpenShift.io account tokens are not valid anymore, you should see a browser launched with the following content:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio browser&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-browser.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enter your RHDP login and the browser will then auto-close and an extract (for security reasons) of the OpenShift.io token will be displayed:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio token dialog&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-token-dialog.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This dialog will be also shown if an OpenShift.io account was configured in the workspace and the account information is valid.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;via-extension-point&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#via-extension-point&quot;&gt;&lt;/a&gt;Via extension point&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The OpenShift.io integration can be invoked by a third party service through the &lt;code&gt;org.jboss.tools.openshift.io.code.tokenProvider&lt;/code&gt; extension point.
      This extension point will perform the same actions as the UI but basically will return an access token for OpenShift.io to the third party service.
      A detailed explanation of how to use this extension point is described here: &lt;a href=&quot;https://github.com/jbosstools/jbosstools-openshift/wiki/OpenShift.io-token-provider&quot;&gt;Wiki page&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can display the account information using the Eclipse &lt;code&gt;Jboss Tools → OpenShift.io&lt;/code&gt; preference node. If you workspace does not contain an OpenShift.io account yet, you should see the following:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio preferences&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-preferences.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you have a configured OpenShift.io account, you should see this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio preferences1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-preferences1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;cdk-3-2-beta-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#cdk-3-2-beta-server-adapter&quot;&gt;&lt;/a&gt;CDK 3.2 Beta Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new server adapter has been added to support the next generation of CDK 3.2. This is Tech Preview in this release as CDK 3.2 is Beta.
      While the server adapter itself has limited functionality, it is able to start and stop the CDK virtual machine via its minishift binary.
      Simply hit Ctrl+3 (Cmd+3 on OSX) and type CDK, that will bring up a command to setup and/or launch the CDK server adapter.
      You should see the old CDK 2 server adapter along with the new CDK 3 one (labeled &lt;strong&gt;Red Hat Container Development Kit 3.2+&lt;/strong&gt; ).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;All you have to do is set the credentials for your Red Hat account, the location of the CDK’s minishift binary file, the type of virtualization hypervisor
      and an optional CDK profile name.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once you’re finished, a new CDK Server adapter will then be created and visible in the Servers view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once the server is started, Docker and OpenShift connections should appear in their respective views, allowing the user to quickly create a new Openshift application and begin developing their AwesomeApp in a highly-replicatable environment.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock warning&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-warning&quot; title=&quot;Warning&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      This is Tech Preview. The implementation is subject to change, may not work with next releases of CDK 3.2 and testing has been limited.
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;global-beans-improve-support-for-bean-references&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#global-beans-improve-support-for-bean-references&quot;&gt;&lt;/a&gt;Global Beans: improve support for Bean references&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now possible to set Bean references from User Interface when creating a new Bean:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Create Factory Bean Reference&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/factoryBeanReference.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Editing Bean references is also now available on the properties view when editing an existing Bean:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Edit Factory Bean Reference&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/factoryBeanReference-propertiesView.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Additional validation has been added to help users avoid mixing Beans defined with class names and Beans defined referencing other beans.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 11 Oct 2017 07:48:24 +0000</pubDate>
</item>
<item>
	<title>typefox.io: Extending a Language Server With Sprotty Diagrams</title>
	<guid isPermaLink="false">http://typefox.io/?p=14390</guid>
	<link>http://typefox.io/extending-a-language-server-with-sprotty-diagrams</link>
	<description>&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;fusion-fullwidth fullwidth-box nonhundred-percent-fullwidth&quot; style=&quot;background-color: rgba(255,255,255,0); background-position: center center; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;&quot;&gt;&lt;div class=&quot;fusion-builder-row fusion-row &quot;&gt;&lt;div class=&quot;fusion-layout-column fusion_builder_column fusion_builder_column_1_1  fusion-one-full fusion-column-first fusion-column-last 1_1&quot; style=&quot;margin-top: 0px; margin-bottom: 0px;&quot;&gt;
			&lt;div class=&quot;fusion-column-wrapper&quot;&gt;
				&lt;p&gt;In &lt;a href=&quot;http://typefox.io/yang-tools-one-language-server-for-four-ides&quot;&gt;my last post&lt;/a&gt;, I described how we connected an Xtext-based language server for the YANG language into various editor clients. Today, I will show how we added graphical diagrams using the &lt;a href=&quot;http://typefox.io/sprotty-a-web-based-diagramming-framework&quot;&gt;sprotty framework&lt;/a&gt;. These diagrams show a graphical overview on your YANG documents. They are automatically layouted and updated on changes. They allow to navigate between diagram and text, to expand and collapse referenced modules, to export them as an SVG file and more.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;wp-caption alignleft&quot; id=&quot;attachment_14395&quot; style=&quot;width: 310px;&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-14395 size-medium&quot; height=&quot;189&quot; src=&quot;http://typefox.io/wp-content/uploads/2017/10/Screen-Shot-2017-10-06-at-13.59.36-1-300x189.png&quot; width=&quot;300&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;A sprotty diagram in Theia…&lt;/p&gt;&lt;/div&gt;
&lt;div class=&quot;wp-caption alignleft&quot; id=&quot;attachment_14384&quot; style=&quot;width: 310px;&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-14384 size-medium&quot; height=&quot;189&quot; src=&quot;http://typefox.io/wp-content/uploads/2017/10/Screen-Shot-2017-10-06-at-13.46.59-300x189.png&quot; width=&quot;300&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;…and in Eclipse&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;div class=&quot;mceTemp&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;fusion-clearfix&quot;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;fusion-fullwidth fullwidth-box nonhundred-percent-fullwidth&quot; style=&quot;background-color: rgba(255,255,255,0); background-position: center center; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;&quot;&gt;&lt;div class=&quot;fusion-builder-row fusion-row &quot;&gt;&lt;div class=&quot;fusion-layout-column fusion_builder_column fusion_builder_column_1_1  fusion-one-full fusion-column-first fusion-column-last 1_1&quot; style=&quot;margin-top: 0px; margin-bottom: 0px;&quot;&gt;
			&lt;div class=&quot;fusion-column-wrapper&quot;&gt;
				&lt;h3&gt;sprotty Client-Server Communication&lt;/h3&gt;
&lt;p&gt;sprotty is a new graphics framework written in TypeScript. In addition to a modern look and feel, built-in animations, a fast virtual DOM architecture, and high-customizability by use of dependency injection, one of its key features is a lean, JSON-based protocol. This protocol allows to separate a server holding the data to be visualized from a client that renders a diagram model and that allows the user to interact with the diagram.&lt;/p&gt;
&lt;p&gt;The communication messages in sprotty are called &lt;em&gt;Actions&lt;/em&gt;. An &lt;em&gt;Action&lt;/em&gt; is a behaviour-less data structure that usually describes a coarse grained semantic operation, like setting a new diagram model or applying the diagram layout. &lt;em&gt;Actions&lt;/em&gt; are usually triggered by the user, by the client or by the server. On the client, they are usually translated into &lt;em&gt;Commands&lt;/em&gt; which modify the diagrams state and trigger rendering updates. &lt;em&gt;Actions&lt;/em&gt; can be sent in both directions.&lt;/p&gt;
&lt;div class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_14391&quot; style=&quot;width: 610px;&quot;&gt;&lt;img alt=&quot;sprotty's event cycle&quot; class=&quot;wp-image-14391&quot; height=&quot;328&quot; src=&quot;http://typefox.io/wp-content/uploads/2017/10/sprotty_actions-300x164.png&quot; width=&quot;600&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;sprotty’s event cycle&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;On the client, the &lt;em&gt;ActionDispatcher&lt;/em&gt; decides which &lt;em&gt;Actions&lt;/em&gt; are executed locally and which ones are sent to and processed by the server. This allows to delegate expensive calculations to the server. E.g. in the YANG tools, we let the server perform the auto-layout calculation using the &lt;a href=&quot;https://www.eclipse.org/elk/&quot;&gt;Eclipse Layout Kernel&lt;/a&gt;. The &lt;em&gt;ActionDispatcher&lt;/em&gt; also acts as a gateway to the client’s event cycle for &lt;em&gt;Actions&lt;/em&gt; coming in from the server.&lt;/p&gt;
&lt;h3&gt;Extending the LSP&lt;/h3&gt;
&lt;p&gt;As the &lt;a href=&quot;https://github.com/Microsoft/language-server-protocol&quot;&gt;Language Server Protocol&lt;/a&gt; (LSP) has the same separation of client and server, the idea is to extend it such that it supports tunneling sprotty’s &lt;em&gt;Actions&lt;/em&gt; as notifications.&lt;/p&gt;
&lt;p&gt;LSP is based on JSON-RPC, so we have to extend the interfaces for the remote procedure calls. This is what the interface &lt;a href=&quot;https://github.com/theia-ide/sprotty/blob/master/server/xtext-diagram/src/main/java/io/typefox/sprotty/server/xtext/DiagramEndpoint.xtend&quot;&gt;&lt;em&gt;DiagramEndpoint&lt;/em&gt;&lt;/a&gt; is doing on the server side: It uses annotations from &lt;a href=&quot;https://github.com/eclipse/lsp4j&quot;&gt;lsp4j&lt;/a&gt; to add a JSON-RPC method &lt;em&gt;diagram/accept&lt;/em&gt; that takes an &lt;em&gt;ActionMessage&lt;/em&gt; as parameter to both endpoints of the communication.&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;@JsonSegment('diagram')
public interface DiagramEndpoint extends Consumer {
   @JsonNotification
   void accept(ActionMessage actionMessage);
}&lt;/pre&gt;&lt;p&gt;
In LSP you usually define a separate method for each functionality. For sprotty, we use the more generic approach with a single method &lt;em&gt;accept&lt;/em&gt; taking a polymorphic &lt;em&gt;ActionMessage&lt;/em&gt; parameter. This allows users to add any kind of custom actions they want without having to fiddle with the details of JSON-RPC.&lt;/p&gt;
&lt;p&gt;Xtext provides the interface &lt;em&gt;ILanguageServerExtension&lt;/em&gt; to define language specific extensions to the LSP. By creating and binding a &lt;em&gt;YangLanguageServerExtension&lt;/em&gt; that implements both &lt;em&gt;ILanguageServerExtension &lt;/em&gt;and &lt;em&gt;DiagramEndpoint&lt;/em&gt;, the YANG language server is capable of receiving &lt;em&gt;Actions&lt;/em&gt; from a sprotty diagram client. By adding the same interface to the client endpoint, the server can also send &lt;em&gt;Actions&lt;/em&gt; to the client.&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;public class YangLanguageServerExtension 
    implements DiagramEndpoint, ILanguageServerExtension {
...
}&lt;/pre&gt;&lt;p&gt;
At least for us, adding diagrams to Xtext-based language servers is going to be a common task, so we’ve added a lot of infrastructure around this. The code is mostly contained in the project &lt;a href=&quot;https://github.com/theia-ide/sprotty/tree/master/server/xtext-diagram&quot;&gt;xtext-diagram&lt;/a&gt; within sprotty. It also contains the mechanics needed for updating diagram models when documents change, synchronizing selection, tracing etc.&lt;/p&gt;
&lt;p&gt;For YANG, we have implemented the &lt;em&gt;IDiagramGenerator&lt;/em&gt; interface. This is called within the Xtext language server for all changed files. Its task is to transform the EMF model of the modified document to a sprotty diagram model (SModel) that describes the associated diagram. As part of the YANG language server, this generator is reused by all our YANG tools.&lt;/p&gt;
&lt;h3&gt;Sprotty Diagrams in Theia&lt;/h3&gt;
&lt;p&gt;The npm package &lt;a href=&quot;https://github.com/theia-ide/theia-sprotty&quot;&gt;theia-sprotty&lt;/a&gt; contains the glue code to have – you guessed it – sprotty diagrams in the Theia IDE. The code is the same for Theia’s browser and Electron mode. It defines things like&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a diagram widget that is backed by a sprotty diagram server,&lt;/li&gt;
&lt;li&gt;communication with a sprotty-extended language server backend,&lt;/li&gt;
&lt;li&gt;alignment of the different DI containers (one container per app in Theia, one per diagram instance in sprotty), and&lt;/li&gt;
&lt;li&gt;synchonization of editor and diagram selection.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The code is generic and can be reused directly as an npm dependency.&lt;/p&gt;
&lt;p&gt;As a Theia diagram implementor, you have to make the Theia extension of your language diagram-aware. This involves&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;implementing a DiagramManager, a DiagramConfiguration, and a sprotty DI configuration for each diagram type,&lt;/li&gt;
&lt;li&gt;adding DI bindings for these in the frontend module,&lt;/li&gt;
&lt;li&gt;create a sprotty DI module for each diagram type, and&lt;/li&gt;
&lt;li&gt;implement the sprotty diagram client (diagram model, model factory, views, commands etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have a look at the package &lt;em&gt;theia-yang-extension&lt;/em&gt; in the project &lt;a href=&quot;https://github.com/theia-ide/yangster&quot;&gt;yangster&lt;/a&gt; to see how we did that for YANG.&lt;br /&gt;
The last point has been extracted to a separate repo &lt;a href=&quot;https://github.com/theia-ide/yang-sprotty&quot;&gt;yang-sprotty&lt;/a&gt; to be reusable in the Eclipse IDE.&lt;/p&gt;
&lt;h3&gt;Sprotty Diagrams in Eclipse&lt;/h3&gt;
&lt;p&gt;For Eclipse, we use SWT’s browser widget to render sprotty diagrams.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://github.com/theia-ide/yang-eclipse&quot;&gt;yangster-eclipse&lt;/a&gt; we spawn a Jetty server to host JavaScript and CSS files for the client and to parse request parameters, e.g. for the YANG file or for the color theme in use. Each Eclipse diagram view opens a web socket to this Jetty server, which is used to relay sprotty &lt;em&gt;Actions&lt;/em&gt; between the YANG language server and the diagram. Some of these &lt;em&gt;Actions&lt;/em&gt; are intercepted, e.g. to open Eclipse’s file selection dialog when exporting a diagram as an SVG image. You will find the corresponding code in the plug-in &lt;em&gt;io.typefox.yang.eclipse.diagram&lt;/em&gt; of the yangster-eclipse feature.&lt;/p&gt;
&lt;div class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_14392&quot; style=&quot;width: 610px;&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-14392&quot; height=&quot;450&quot; src=&quot;http://typefox.io/wp-content/uploads/2017/10/sprotty_eclipse-300x225.png&quot; width=&quot;600&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;LSP editors and sprotty diagrams in Eclipse&lt;/p&gt;&lt;/div&gt;
&lt;div class=&quot;fusion-clearfix&quot;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 11 Oct 2017 06:27:46 +0000</pubDate>
</item>
<item>
	<title>Doug Schaefer: The Dream, my IDE Dream</title>
	<guid isPermaLink="false">https://cdtdoug.ca/tag/eclipse/rss/59dd05f04bfcdf78894a43bb</guid>
	<link>https://cdtdoug.ca/the-dream-my-ide-dream/</link>
	<description>&lt;div class=&quot;kg-card-markdown&quot;&gt;&lt;p&gt;Let me tell you a story.&lt;/p&gt;
&lt;p&gt;I got into work today and found an e-mail in my inbox from my boss. A customer was having an issue and he wanted me to look at it. He included in the e-mail a link to the JIRA. I clicked on the link and it opened up.&lt;/p&gt;
&lt;p&gt;The good news is that the JIRA included an analysis from our fault analysis AI engine. I clicked on a link and it brought up the report.&lt;/p&gt;
&lt;p&gt;The engine had seen the same crash the customer reported a few times and analyzed my source to pinpoint where it was wondering if a value passed into the API was not being handled properly. OK, let me try this in the simulator with the debugger. I click a link and git checks out the corresponding version of the software stack used in one of the crashes.&lt;/p&gt;
&lt;p&gt;Running it in the debugger, I see, that yes, the engine was right. One of the clients was passing in a value that I wasn't expecting. So I added code to handle it and ran it with the simulator again. Worked there, but to make sure I changed the target selector and to run it on some real hardware. A VNC session opens up and I can see that it fixed it there too.&lt;/p&gt;
&lt;p&gt;I then click commit. All the relevant information from the investigation so far is automatically added to the commit comments and I add a quick line apologizing for missing this scenario and click submit to Gerrit. The review opens up and I do a quick check to make sure everything I wanted was there. I then see that the verify job has started up on Jenkins and I go for a coffee.&lt;/p&gt;
&lt;p&gt;When I get back, I have a notification that the verify job has failed due to one of the tests failing. I click through to see the test and click another button for git to checkout the test and to start it running on the simulator under the debugger. A breakpoint is hit at the failure and I see I messed up the handling for the value it was passing in.&lt;/p&gt;
&lt;p&gt;I make a quick fix, run the test again. It passes. I run the test I was doing for the original scenario and see it's working too. I amend the commit and resubmit. The Jenkins build passes and I do the final commit to the branch.&lt;/p&gt;
&lt;p&gt;A few days later, I get a notification from our fault analysis AI engine. It has noticed that since my change, the crashes no longer happens. With that confidence, I mark the JIRA as verified and the customer is happy.&lt;/p&gt;
&lt;p&gt;This is what I want from my IDE. I didn't use the term IDE in the description because everything I interfaced with to solve the customer's problem was the IDE (yes, even the mail client). We have all of this already, except maybe the AI engine, but that will come. What we're missing are the little things we get from these tools knowing about eachother. It's the &quot;I&quot; in IDE!&lt;/p&gt;
&lt;p&gt;Mik Kersten envisioned this many years ago when he invented Mylyn. And I've seen a lot of this in IBM's Jazz. I think a lot of those ideas were ahead of their time and on a platform that struggles with being this complete environment. Workflows start with the cloud for the analysis phase, then meander into the desktop code and debug environments to test and fix the problem, and then back into the cloud for verification and closure.&lt;/p&gt;
&lt;p&gt;The next generation IDE needs to seamlessly blend these tools so you don't even notice where things are running or even when you've switched between them. You know you're using a great IDE when you don't even realize you're using it.&lt;/p&gt;
&lt;/div&gt;</description>
	<pubDate>Tue, 10 Oct 2017 18:08:34 +0000</pubDate>
</item>

</channel>
</rss>
